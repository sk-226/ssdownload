[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ssdownload"
version = "0.1.0"
description = "Download sparse matrices from SuiteSparse Matrix Collection"
readme = "README.md"
license = "MIT"
requires-python = ">=3.12"
authors = [
    {name = "Suguru Kurita", email = "skurita0208@gmail.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Mathematics",
]
dependencies = [
    "httpx>=0.25.0",
    "typer>=0.9.0",
    "pydantic>=2.0.0",
    "rich>=13.0.0",
    "tqdm>=4.66.0",
    "beautifulsoup4>=4.12.0",
    "platformdirs>=3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-httpx>=0.26.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "pre-commit>=3.5.0",
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
]

[project.scripts]
ssdl = "ssdownload.cli:app"

[tool.hatch.build.targets.wheel]
packages = ["src/ssdownload"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE",
]

[tool.black]
line-length = 88
target-version = ['py312']

[tool.isort]
profile = "black"
line_length = 88

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (requiring network access or file I/O)",
    "integration: marks tests as integration tests with real API calls",
    "contract: marks tests as contract tests for API response format",
    "property: marks property-based tests with Hypothesis",
    "e2e: marks end-to-end workflow tests",
    "performance: marks performance and load tests",
]
addopts = [
    "--strict-markers",
    "--disable-warnings",
]

[tool.uv]
dev-dependencies = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-httpx>=0.35.0",
    "mypy>=1.0.0",
    "pytest-cov>=4.0.0",
    "pre-commit>=4.2.0",
    "hypothesis>=6.135.16",
]
